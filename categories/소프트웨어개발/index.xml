<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>소프트웨어개발 on nuuv blog</title><link>https://ssomal62.github.io/categories/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C/</link><description>Recent content in 소프트웨어개발 on nuuv blog</description><generator>Hugo</generator><language>ko</language><lastBuildDate>Mon, 30 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://ssomal62.github.io/categories/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EA%B0%9C%EB%B0%9C/index.xml" rel="self" type="application/rss+xml"/><item><title>프로젝트를 위한 개념 - 협업툴 이해</title><link>https://ssomal62.github.io/devl/study/009/</link><pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate><guid>https://ssomal62.github.io/devl/study/009/</guid><description>라이브러리와 프레임워크의 차이 # 프레임워크 애플리케이션 개발 시 필수적인 코드, 알고리즘, DB 커넥션 등을 위한 뼈대 설계와 구현을 재사용이 가능한 클래스와 인터페이스의 집합 JAVA - SPRING / PYTHON - DJANGO 등 라이브러리 개발 할 때 프로그램이 사용하는 비휘발성 자원 모임 구성 데이터, 문서, 도움말, 메시지 틀, 미리 작성된 코드, 함수 , 클래스 ,값, 자료형 사양 등등 포함.</description></item></channel></rss>